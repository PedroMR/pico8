pico-8 cartridge // http://www.pico-8.com
version 29
__lua__
-- shmup
margin=20
x0=margin*2
x1=128-3
xm=(x1+x0)/2

local lvl_ypos=-20
function add_w5e1(r)
 local x=20+x0
 if (r) x=2*xm-x
 for i=1,5 do
		add(lvl.spawn, {e=1,b=1,x=x,y=lvl_ypos,hp=3})
		lvl_ypos-=10
 end
 lvl_ypos-=20
end

lvl={spawn={}}
add_w5e1(true)
add_w5e1()
add_w5e1(true)
add_w5e1()

function init_game()
	actors={}
	pl_bul={}
	cam={x=0,y=0}
	pl={x=56,y=100,s=2,next_shot=0,hp=20,hpmax=20}
end


init_game()
-->8
--update


function _update()
 cam.y-=1
 upd_input()
 upd_spawn()
 upd_enemies()
end

function upd_spawn()
 for i,v in pairs(lvl.spawn) do
 	if v.y >= cam.y-8 then
 	 spawn(v)
 	end
 end
 for i,v in pairs(lvl.spawn) do
 	if v.y >= cam.y then
 	 del(lvl.spawn,v)
 	end
 end
end

function spawn(s)
 a={e=s.e,x=s.x,y=s.y,b=s.b,vx=0,vy=0,hp=s.hp}
 if(s.e==1) a.s=7
 add(actors,a)
 if(firstene==nil)firstene=a
end

function upd_enemies()
 for i,v in pairs(actors) do
 	if (v.b==1) then
 	 v.y+=0
 		if (v.vx==0 and v.y>=cam.y+100) then
 		 local dx=-2
 		 if (v.x < xm) dx=2
 		 v.vx=dx
 		end 		
			v.x+=v.vx
 	end
 end
 for i,v in pairs(actors) do  	
 	if (v.y-cam.y > 128) del(actors,v)
 end
end

function upd_input()
 local dx,dy=0,-1
 if (btn(1)) dx= 2 
 if (btn(0)) dx=-2
 if (btn(3)) dy+= 2 
 if (btn(2)) dy+=-2
 
 pl.x += dx
 if (pl.x < x0+2 or pl.x > x1-9) then
  pl.x -= dx
 end
 
 pl.y += dy
 if (pl.y-cam.y < 0 or pl.y-cam.y > 120) then
  pl.y -= dy+1
 end
 
 if dx==0 then pl.s = 2
 else pl.s = 2+sgn(dx)
 end

	pl.next_shot-=1;
 
 if btn(5) and pl.next_shot <= 0 then
   pl.next_shot=6
   add(pl_bul, {s=4,x=pl.x-4,y=pl.y+3,vy=-5})
   add(pl_bul, {s=4,x=pl.x+4,y=pl.y+3,vy=-5})
 end

 for b in all(pl_bul) do
 	b.y += b.vy
 	
 	for e in all(actors) do
 	 if abs(b.x-e.x)<6 and
 	 	  abs(b.y-e.y)<4 then
 	 	e.hp -= 1
 	 	e.hit=true
 	 	del(pl_bul,b)
 	 end
 	end
 end  
 for i,b in pairs(pl_bul) do
  if (b.y<cam.y) deli(pl_bul,i)
 end
 for i,e in pairs(actors) do
  if abs(pl.x-e.x)<4 and
     abs(pl.y-e.y)<4 then
   e.hp = 0
   e.hit=true
   pl.hp-=1
   pl.hit=true
  end
 end
 for e in all(actors) do
  if (e.hp <= 0) then
  	del(actors,e)
  end
 end

end


-->8
-- draw

function flash_pain(c)
 for i=1,15 do
  pal(i,c)
 end
end

function _draw()
 cls()
 camera(cam.x, cam.y)
 clip(x0,0,x1-x0+1,128)
 --enemies
 for a in all(actors) do
  if(a.hit) flash_pain(7)
  spr(a.s,a.x,a.y)
  pal()
  a.hit = false
 end
 -- player
 if(pl.hit) flash_pain(8)
	spr(pl.s,pl.x,pl.y)
 pal()
 pl.hit = false
 local flame=18
 if(flr((40*t()))%2==0) flame=17
	spr(flame,pl.x,pl.y+8)
	-- player bullets
 for i,b in pairs(pl_bul) do
 	spr(b.s,b.x,b.y)
 end
 --enemy bullets
 
 
 --draw ui
 camera()
 clip()
 local colx=x0
 -- borders
 rectfill(0,0,x0,128,1)
 rectfill(x1,0,128,128,1)
 rectfill(x0-2,0,x0,128,7)
 rectfill(x1,0,x1+2,128,7)
 -- hp bar
 print("â™¥",0,1,11)
 rectfill(9,1,pl.hpmax+9,4,0)
 rectfill(9,1,max(pl.hp,0)+9,4,11)
 
 local p=99
 if(firstene~=nil) p = firstene.hp
 print(p.." cy:"..cam.y,0,120)
end
__gfx__
00000000000660000007700000066000000000000000000000000000044444404455554400000000000000000000000000000000000000000000000000000000
00000000000660000007700000066000000000000000000000000000400440040455554000000000000000000000000000000000000000000000000000000000
00700700000660000007700000066000000000000000000000000000400440040444444000000000000000000000000000000000000000000000000000000000
00077000005667000067760000766500000bb0000000000000000000080990800008800000000000000000000000000000000000000000000000000000000000
00077000005667000067760000766500000bb0000000000000000000000440000008800000000000000000000000000000000000000000000000000000000000
00700700b053370bb063360bb073350b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000505667075067760570766505000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000555667775567765577766555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000199100001aa10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000001881000019910000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000110000018810000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000110000001100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000001100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000444000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000004440400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00088000044440080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00088000040449000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000400094000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
